--- ./client-report/src/components/overview.js	2023-11-06 18:44:37.262718111 +0200
+++ ../patches/client-report/src/components/overview.js	2023-11-06 18:41:21.033452700 +0200
@@ -4,6 +4,8 @@
 import _ from "lodash";
 import * as globals from "./globals";
 
+import { useTranslation } from 'react-i18next';
+
 const computeVoteTotal = (users) => {
   let voteTotal = 0;
 
@@ -39,38 +41,31 @@
   //stats,
   computedStats,
 }) => {
+  const { t } = useTranslation();
   return (
     <div >
-      <p style={globals.primaryHeading}>Overview</p>
-      <p style={globals.paragraph}>
-        Pol.is is a real-time survey system that helps identify the different ways a large group of people think about a divisive or complicated topic. Here’s a basic breakdown of some terms you’ll need to know in order to understand this report.
-      </p>
-      <p style={globals.paragraph}>
-        <strong>Participants:</strong> These are the people who participated in the conversation by voting and writing statements. Based on how they voted, each participant is sorted into an opinion group.
-      </p>
-      <p style={globals.paragraph}>
-        <strong>Statements:</strong> Participants may submit statements for other participants to vote on. Statements are assigned a number in the order they’re submitted.
-      </p>
-      <p style={globals.paragraph}>
-        <strong>Opinion groups:</strong> Groups are made of participants who voted similarly to each other, and differently from the other groups.
-      </p>
+      <p style={globals.primaryHeading}>{t('overview.title')}</p>
+      <p style={globals.paragraph}>{t('overview.text')}</p>
+      <p style={globals.paragraph}><strong>{t('overview.term_participants_title')}:</strong> {t('overview.term_participants_text')}</p>
+      <p style={globals.paragraph}><strong>{t('overview.term_statements_title')}:</strong> {t('overview.term_statements_text')}</p>
+      <p style={globals.paragraph}><strong>{t('overview.term_opinion_groups_title')}:</strong> {t('overview.term_opinion_groups_text')}</p>
 
       <p style={globals.paragraph}>
-        {conversation && conversation.ownername ? "This pol.is conversation was run by "+conversation.ownername+". " : null}
-        {conversation && conversation.topic ? "The topic was '"+conversation.topic+"'. " : null}
+        {conversation && conversation.ownername ? t('overview.ownername_text')+"'"+conversation.ownername+"'. " : null}
+        {conversation && conversation.topic ? t('overview.topic_text')+"'"+conversation.topic+"'. " : null}
       </p>
       <div style={{maxWidth: 1200, display: "flex", justifyContent: "space-between"}}>
-        <Number number={ptptCountTotal} label={"people voted"} />
-        <Number number={ptptCount} label={"people grouped"} />
+        <Number number={ptptCountTotal} label={t('overview.people_voted')} />
+        <Number number={ptptCount} label={t('overview.people_grouped')} />
 
         <Number
           number={ computeVoteTotal(math["user-vote-counts"]) }
-          label={"votes were cast"} />
+          label={t('overview.votes_cast')} />
         {/* Leaving this out for now until we get smarter conversationStats */}
         {/* <Number number={comments.length} label={"people submitted statements"} /> */}
-        <Number number={math["n-cmts"]} label={"statements were submitted"} />
-        <Number number={computedStats.votesPerVoterAvg.toFixed(2)} label={"votes per voter on average"} />
-        <Number number={computedStats.commentsPerCommenterAvg.toFixed(2)} label={"statements per author on average"} />
+        <Number number={math["n-cmts"]} label={t('overview.statements_submitted')} />
+        <Number number={computedStats.votesPerVoterAvg.toFixed(2)} label={t('overview.votes_per_voter_avg')} />
+        <Number number={computedStats.commentsPerCommenterAvg.toFixed(2)} label={t('overview.statements_per_author_avg')} />
 
       </div>
 
