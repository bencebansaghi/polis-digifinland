--- ./client-report/src/components/lists/allCommentsModeratedIn.js	2023-11-10 11:37:06.277287062 +0200
+++ ../patches/client-report/src/components/lists/allCommentsModeratedIn.js	2023-11-10 11:37:03.127287011 +0200
@@ -5,6 +5,7 @@
 import CommentList from "./commentList";
 import * as globals from "../globals";
 
+import { withTranslation } from 'react-i18next';
 
 function sortByTid(comments) {
   return _.map(comments, (comment) => comment.tid).sort((a, b) => a - b);
@@ -26,7 +27,7 @@
   return _.map(_.reverse(_.sortBy(comments, (c) => {return c["pctPassed"];})), (c) => {return c.tid;});
 }
 
-class allCommentsModeratedIn extends React.Component {
+class allCommentsModeratedInTranslated extends React.Component {
 
   constructor(props) {
     super(props);
@@ -63,21 +64,19 @@
     } else {
       console.error('missing sort function', this.state.sortStyle);
     }
-
+    const { t } = this.props;
     return (
       <div>
-        <p style={globals.primaryHeading}> All statements </p>
-        <p style={globals.paragraph}>
-          Group votes across all statements, excluding those statements which were moderated out.
-        </p>
-        <label htmlFor="allCommentsSortMode">Sort by: </label>
+        <p style={globals.primaryHeading}>{t('all_comments.title')}</p>
+        <p style={globals.paragraph}>{t('all_comments.text')}</p>
+        <label htmlFor="allCommentsSortMode">{t('all_comments.sortby')}</label>
         <select id="allCommentsSortMode" onChange={this.onSortChanged.bind(this)} value={this.state.sortStyle}>
-          <option value="tid">Statement Id</option>
-          <option value="consensus">Group-informed Consensus</option>
-          <option value="numvotes">Number of votes</option>
-          <option value="pctAgreed">% Agreed</option>
-          <option value="pctDisagreed">% Disagreed</option>
-          <option value="pctPassed">% Passed</option>
+          <option value="tid">{t('all_comments.tid')}</option>
+          <option value="consensus">{t('all_comments.consensus')}</option>
+          <option value="numvotes">{t('all_comments.numvotes')}</option>
+          <option value="pctAgreed">% {t('all_comments.agreed')}</option>
+          <option value="pctDisagreed">% {t('all_comments.disagreed')}</option>
+          <option value="pctPassed">% {t('all_comments.passed')}</option>
         </select>
         <div style={{marginTop: 50}}>
           <CommentList
@@ -94,4 +93,6 @@
   }
 }
 
-export default allCommentsModeratedIn;
+//export default allCommentsModeratedIn;
+const allCommentsModeratedIn = withTranslation()(allCommentsModeratedInTranslated);
+export default withTranslation()(allCommentsModeratedIn);
\ No newline at end of file
